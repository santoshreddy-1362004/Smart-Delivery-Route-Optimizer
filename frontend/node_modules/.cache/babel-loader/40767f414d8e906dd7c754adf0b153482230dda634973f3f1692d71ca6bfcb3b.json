{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart-Delivery-Route-Optimizer/frontend/src/components/RouteResult.js\";\nimport React from 'react';\nimport './RouteResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouteResult = ({\n  result\n}) => {\n  const formatRoute = route => {\n    return route.map(city => `City ${city}`).join(' ‚Üí ');\n  };\n  const getRouteSegments = route => {\n    const segments = [];\n    for (let i = 0; i < route.length - 1; i++) {\n      segments.push({\n        from: route[i],\n        to: route[i + 1],\n        segment: `${route[i]} ‚Üí ${route[i + 1]}`\n      });\n    }\n    return segments;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFAF Optimization Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Optimal Distance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: result.distance.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Cities Visited:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: result.cities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Algorithm:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value\",\n          children: result.algorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCD Optimal Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-path\",\n        children: formatRoute(result.route)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-segments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Route Segments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getRouteSegments(result.route).map((segment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"segment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"segment-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"segment-path\",\n              children: [\"City \", segment.from, \" \\u2192 City \", segment.to]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u2139\\uFE0F About the Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Held-Karp algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), \" uses dynamic programming to find the exact optimal solution to the Traveling Salesman Problem. It has a time complexity of O(n\\xB2 \\xD7 2\\u207F) and guarantees the shortest possible route.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = RouteResult;\nexport default RouteResult;\nvar _c;\n$RefreshReg$(_c, \"RouteResult\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RouteResult","result","formatRoute","route","map","city","join","getRouteSegments","segments","i","length","push","from","to","segment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","distance","toFixed","cities","algorithm","index","_c","$RefreshReg$"],"sources":["/workspaces/Smart-Delivery-Route-Optimizer/frontend/src/components/RouteResult.js"],"sourcesContent":["import React from 'react';\nimport './RouteResult.css';\n\nconst RouteResult = ({ result }) => {\n  const formatRoute = (route) => {\n    return route.map(city => `City ${city}`).join(' ‚Üí ');\n  };\n\n  const getRouteSegments = (route) => {\n    const segments = [];\n    for (let i = 0; i < route.length - 1; i++) {\n      segments.push({\n        from: route[i],\n        to: route[i + 1],\n        segment: `${route[i]} ‚Üí ${route[i + 1]}`\n      });\n    }\n    return segments;\n  };\n\n  return (\n    <div className=\"route-result\">\n      <h2>üéØ Optimization Result</h2>\n      \n      <div className=\"result-summary\">\n        <div className=\"metric\">\n          <span className=\"metric-label\">Optimal Distance:</span>\n          <span className=\"metric-value\">{result.distance.toFixed(2)}</span>\n        </div>\n        \n        <div className=\"metric\">\n          <span className=\"metric-label\">Cities Visited:</span>\n          <span className=\"metric-value\">{result.cities}</span>\n        </div>\n        \n        <div className=\"metric\">\n          <span className=\"metric-label\">Algorithm:</span>\n          <span className=\"metric-value\">{result.algorithm}</span>\n        </div>\n      </div>\n\n      <div className=\"route-display\">\n        <h3>üìç Optimal Route</h3>\n        <div className=\"route-path\">\n          {formatRoute(result.route)}\n        </div>\n        \n        <div className=\"route-segments\">\n          <h4>Route Segments:</h4>\n          <ul>\n            {getRouteSegments(result.route).map((segment, index) => (\n              <li key={index} className=\"segment-item\">\n                <span className=\"segment-number\">{index + 1}.</span>\n                <span className=\"segment-path\">City {segment.from} ‚Üí City {segment.to}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"algorithm-info\">\n        <h4>‚ÑπÔ∏è About the Algorithm</h4>\n        <p>\n          The <strong>Held-Karp algorithm</strong> uses dynamic programming to find the \n          exact optimal solution to the Traveling Salesman Problem. It has a time \n          complexity of O(n¬≤ √ó 2‚Åø) and guarantees the shortest possible route.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RouteResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}