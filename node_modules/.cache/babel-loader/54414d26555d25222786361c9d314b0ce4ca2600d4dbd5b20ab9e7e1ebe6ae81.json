{"ast":null,"code":"import React from'react';import'./RouteResult.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RouteResult=_ref=>{let{result}=_ref;const formatRoute=route=>{return route.map(city=>\"City \".concat(city)).join(' ‚Üí ');};const getRouteSegments=route=>{const segments=[];for(let i=0;i<route.length-1;i++){segments.push({from:route[i],to:route[i+1],segment:\"\".concat(route[i],\" \\u2192 \").concat(route[i+1])});}return segments;};return/*#__PURE__*/_jsxs(\"div\",{className:\"route-result\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF Optimization Result\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Optimal Distance:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:result.distance.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Cities Visited:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:result.cities})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Algorithm:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:result.algorithm})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCD Optimal Route\"}),/*#__PURE__*/_jsx(\"div\",{className:\"route-path\",children:formatRoute(result.route)}),/*#__PURE__*/_jsxs(\"div\",{className:\"route-segments\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Route Segments:\"}),/*#__PURE__*/_jsx(\"ul\",{children:getRouteSegments(result.route).map((segment,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"segment-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"segment-number\",children:[index+1,\".\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"segment-path\",children:[\"City \",segment.from,\" \\u2192 City \",segment.to]})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"algorithm-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u2139\\uFE0F About the Algorithm\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"The \",/*#__PURE__*/_jsx(\"strong\",{children:\"Held-Karp algorithm\"}),\" uses dynamic programming to find the exact optimal solution to the Traveling Salesman Problem. It has a time complexity of O(n\\xB2 \\xD7 2\\u207F) and guarantees the shortest possible route.\"]})]})]});};export default RouteResult;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","RouteResult","_ref","result","formatRoute","route","map","city","concat","join","getRouteSegments","segments","i","length","push","from","to","segment","className","children","distance","toFixed","cities","algorithm","index"],"sources":["/workspaces/Smart-Delivery-Route-Optimizer/src/components/RouteResult.js"],"sourcesContent":["import React from 'react';\nimport './RouteResult.css';\n\nconst RouteResult = ({ result }) => {\n  const formatRoute = (route) => {\n    return route.map(city => `City ${city}`).join(' ‚Üí ');\n  };\n\n  const getRouteSegments = (route) => {\n    const segments = [];\n    for (let i = 0; i < route.length - 1; i++) {\n      segments.push({\n        from: route[i],\n        to: route[i + 1],\n        segment: `${route[i]} ‚Üí ${route[i + 1]}`\n      });\n    }\n    return segments;\n  };\n\n  return (\n    <div className=\"route-result\">\n      <h2>üéØ Optimization Result</h2>\n      \n      <div className=\"result-summary\">\n        <div className=\"metric\">\n          <span className=\"metric-label\">Optimal Distance:</span>\n          <span className=\"metric-value\">{result.distance.toFixed(2)}</span>\n        </div>\n        \n        <div className=\"metric\">\n          <span className=\"metric-label\">Cities Visited:</span>\n          <span className=\"metric-value\">{result.cities}</span>\n        </div>\n        \n        <div className=\"metric\">\n          <span className=\"metric-label\">Algorithm:</span>\n          <span className=\"metric-value\">{result.algorithm}</span>\n        </div>\n      </div>\n\n      <div className=\"route-display\">\n        <h3>üìç Optimal Route</h3>\n        <div className=\"route-path\">\n          {formatRoute(result.route)}\n        </div>\n        \n        <div className=\"route-segments\">\n          <h4>Route Segments:</h4>\n          <ul>\n            {getRouteSegments(result.route).map((segment, index) => (\n              <li key={index} className=\"segment-item\">\n                <span className=\"segment-number\">{index + 1}.</span>\n                <span className=\"segment-path\">City {segment.from} ‚Üí City {segment.to}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"algorithm-info\">\n        <h4>‚ÑπÔ∏è About the Algorithm</h4>\n        <p>\n          The <strong>Held-Karp algorithm</strong> uses dynamic programming to find the \n          exact optimal solution to the Traveling Salesman Problem. It has a time \n          complexity of O(n¬≤ √ó 2‚Åø) and guarantees the shortest possible route.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default RouteResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}